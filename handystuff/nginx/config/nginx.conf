user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile on;    # copies data between one FD and other from within the kernel, faster than read() + write()
    tcp_nopush on;  # send headers in one piece, it is better than sending them one by one
    tcp_nodelay on; # don't buffer data sent, good for small data bursts in real time

    # gzip settings
    gzip on;
    gzip_min_length 10240;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/html
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    reset_timedout_connection on; # allow the server to close connection on non responding client, this will free up memory
    client_header_timeout   10s;
    client_body_timeout     10s;
    send_timeout            2s;
    keepalive_timeout       30s 10s;

    server {
        listen       80;
        listen  [::]:80;
        server_name  vocadb-notification-reader.handystuff.net;
        root   /usr/share/nginx/html/vocadb-notification-reader;

        location / {
            try_files $uri $uri.html $uri/ /home.html;
        }
    }

    server {
        listen       80;
        listen  [::]:80;
        server_name  niconicotagger.handystuff.net;
        root   /usr/share/nginx/html/niconicotagger;

        location /events {
            try_files /events.html /login.html;
        }

        location /tags {
            try_files /tags.html /login.html;
        }

        location /console {
            try_files /console.html /login.html;
        }

        location / {
            try_files $uri $uri.html $uri/ /index.html;
        }
    }
}
